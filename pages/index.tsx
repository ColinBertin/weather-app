import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { ChangeEvent, MouseEvent, useEffect, useState } from "react";

// Has to be change---------------------------------------------------------------------
type WeatherData = any;

export default function Home() {
  const [formattedCity, setFormattedCity] = useState("");
  const [city, setCity] = useState("");
  // const [today, setToday] = useState({});
  // const [previsions, setPrevisions] = useState([]);
  // const [todayDate, setTodayDate] = useState("");
  // const [currentTime, setCurrentTime] = useState(6);

  const getWeatherData = async (lonLat: WeatherData) => {
    const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lonLat[0].lat}&lon=${lonLat[0].lon}&units=metric&appid=${process.env.NEXT_PUBLIC_WEATHER_API_KEY}`;

    const response = await fetch(url);
    const data = await response.json();
    console.log(data);
    console.log(formattedCity);
    // return data;
  };

  const getCoords = async (
    e: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>
  ) => {
    e.preventDefault();
    const url = `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=10&appid=${process.env.NEXT_PUBLIC_WEATHER_API_KEY}`;
    try {
      const response = await fetch(url);
      const data = await response.json();
      setFormattedCity(`${data[0].name}, ${data[0].country}`);
      getWeatherData(data);
    } catch (error) {
      console.log(error);
    }
  };

  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    setCity(e.target.value);
  };

  useEffect(() => {}, []);

  return (
    <>
      <Head>
        <title>Weather App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <form action="">
          <input type="text" onChange={(e) => handleChange(e)} />
          <button type="submit" onClick={(e) => getCoords(e)}>
            Search
          </button>
        </form>
      </main>
    </>
  );
}
