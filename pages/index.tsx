import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import { ChangeEvent, KeyboardEvent, useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [formattedCity, setFormattedCity] = useState("");
  const [city, setCity] = useState("Tokyo");
  const [query, setQuery] = useState("");
  const [lonLat, SetLongLat] = useState({});
  // const [today, setToday] = useState({});
  // const [previsions, setPrevisions] = useState([]);
  // const [todayDate, setTodayDate] = useState("");
  // const [currentTime, setCurrentTime] = useState(6);

  const getWeatherData = async (lonlat) => {
    const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lonlat.lat}&lon=${lonlat.lon}&units=metric&appid=${process.env.WEATHER_API_KEY}`;

    const response = await fetch(url);
    const data = await response.json();

    return data;
  };

  const getCoords = async () => {
    const url = `http://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=10&appid=${process.env.NEXT_PUBLIC_WEATHER_API_KEY}`;
    try {
      const response = await fetch(url);
      const data = await response.json();
      setFormattedCity(`${data[0].name}, ${data[0].country}`);
      SetLongLat({ lat: data[0].lat, lon: data[0].lon });
      console.log(lonLat);
      return data;
    } catch (error) {
      console.log(error);
    }
    getWeatherData(lonLat);
  };

  const handleSearch = (e: KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter") {
      e.preventDefault();
      const newCity =
        query.charAt(0).toUpperCase() + query.substring(1).toLowerCase();
      setCity(newCity);
      setQuery("");
    }
  };

  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    setQuery(e.target.value);
    console.log(query);
  };

  useEffect(() => {
    getCoords();
  }, []);

  return (
    <>
      <Head>
        <title>Weather App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <form action="">
          <input
            type="text"
            onChange={(e) => handleChange(e)}
            onKeyPress={(e) => handleSearch(e)}
          />
          <button type="submit" onClick={getCoords}>
            Search
          </button>
        </form>
      </main>
    </>
  );
}
